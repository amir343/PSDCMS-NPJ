# JVM arguments
# add "-Djulia.loader.gen.log=err" to log the generated classes
# add "-Djulia.loader.gen.dir=/tmp" to store the generated classes on disk

run.jvm.parameters \
  -Dfractal.provider=org.objectweb.fractal.julia.Julia \
  -Djulia.loader=org.objectweb.fractal.julia.loader.DynamicLoader \
  -Djulia.config=etc/julia.cfg

# Java class to be launched

# in order to run a Fractal ADL definition
run.classname org.objectweb.fractal.adl.Launcher

# in order to compile a Fractal ADL definition
#run.classname org.objectweb.fractal.adl.CompileToJava

# Application arguments
# add "parser" to build the components automatically, by using a parser
# add "templates" to build the components through templates
# add "wrapper" to add an additional composite around each primitive

# Run HelloWorld.fractal
run.parameters -fractal yass.Yass r
#run.parameters -fractal ClientServerImpl r
#run.parameters -fractal SharedHelloWorld r

# Compile HelloWorld.fractal
#run.parameters -fractal HelloWorld 
